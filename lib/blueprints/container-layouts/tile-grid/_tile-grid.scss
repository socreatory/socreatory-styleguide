@use "../../../fundamentals/spacers";
@use "../../../fundamentals/breakpoints";

.tile-grid--sm,
.tile-grid--md {
  display: grid;
  row-gap: spacers.$spacer-base;
  column-gap: spacers.$spacer-base;
  width: 100%;

  @include breakpoints.for-tablet-landscape-up {
    row-gap: spacers.$spacer-lg;
    column-gap: spacers.$spacer-lg;
  }
}

.tile-grid--sm {
  grid-template-columns: repeat(auto-fit, minmax(min(25rem, 100%), 1fr));
}

.tile-grid--md {
  grid-template-columns: repeat(auto-fit, minmax(min(30rem, 100%), 1fr));
}

.tile-grid-gap--sm {
  row-gap: spacers.$spacer-sm;
  column-gap: spacers.$spacer-sm;
}

.tile-grid-gap--base {
  row-gap: spacers.$spacer-base;
  column-gap: spacers.$spacer-base;
}

.tile-grid--3-col {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(min(18rem, 100%), 1fr));
  row-gap: spacers.$spacer-base;
  column-gap: spacers.$spacer-lg;

  width: 100%;

  @include breakpoints.for-tablet-landscape-up {
    row-gap: spacers.$spacer-lg;
    column-gap: spacers.$spacer-2xl;
  }

  p {
    margin-bottom: 0;
  }
}

.tile-grid__wrapper {
  > * + * {
    margin-top: spacers.$spacer-sm;
  }

  > * {
    margin-bottom: 0; // TODO Refactor
  }

  turbo-frame {
    turbo-frame {
      margin-top: spacers.$spacer-sm;
    }

    > a {
      display: block;
      margin-top: spacers.$spacer-xs;
    }
  }
}
